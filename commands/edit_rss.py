from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def edit_rss_handler(message: types.Message, rss_feeds, user_states):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id not in user_states:
        if not rss_feeds:
            await message.answer("–°–ø–∏—Å–æ–∫ RSS –ø—É—Å—Ç.")
            return

        user_states[chat_id] = {"mode": "edit", "step": 0}
        msg = "üìÉ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä RSS –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n" + \
              "\n".join(f"{i+1}. {rss['name']} ({rss['url']})" for i, rss in enumerate(rss_feeds))
        await message.answer(msg)
        return

    state = user_states[chat_id]
    step = state["step"]

    # –®–∞–≥ 0 ‚Äî –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞
    if step == 0:
        try:
            num = int(text)
            if 1 <= num <= len(rss_feeds):
                index = num - 1
                state["index"] = index
                state["step"] = 1

                keyboard = InlineKeyboardMarkup(row_width=1)
                keyboard.add(
                    InlineKeyboardButton("–°—Å—ã–ª–∫–∞", callback_data="edit_url"),
                    InlineKeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_name"),
                    InlineKeyboardButton("–ò–Ω—Ç–µ—Ä–≤–∞–ª", callback_data="edit_interval")
                )
                await message.answer(
                    f"–í—ã –≤—ã–±—Ä–∞–ª–∏ #{num}: {rss_feeds[index]['name']}\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:",
                    reply_markup=keyboard
                )
            else:
                await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(rss_feeds)}")
        except ValueError:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
