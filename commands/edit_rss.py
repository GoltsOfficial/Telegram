from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

async def edit_rss_handler(message: types.Message, rss_feeds, user_states):
    chat_id = message.chat.id
    text = message.text.strip()

    # –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª—Å—è ‚Äî –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ RSS
    if chat_id not in user_states or user_states[chat_id].get("mode") != "edit":
        if not rss_feeds:
            await message.answer("–°–ø–∏—Å–æ–∫ RSS –ø—É—Å—Ç.")
            return

        msg = "üìÉ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä RSS –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n" + \
              "\n".join(f"{i+1}. {rss['name']} ({rss['url']})" for i, rss in enumerate(rss_feeds))
        await message.answer(msg)
        user_states[chat_id] = {"mode": "edit", "step": 0}
        return

    state = user_states[chat_id]
    step = state["step"]

    # –®–∞–≥ 0 ‚Äî –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ RSS
    if step == 0:
        try:
            num = int(text)
            if 1 <= num <= len(rss_feeds):
                index = num - 1
                state["index"] = index
                state["step"] = 1

                # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è
                keyboard = InlineKeyboardMarkup(row_width=1)
                keyboard.add(
                    InlineKeyboardButton("–°—Å—ã–ª–∫–∞", callback_data="edit_url"),
                    InlineKeyboardButton("–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_name"),
                    InlineKeyboardButton("–ò–Ω—Ç–µ—Ä–≤–∞–ª", callback_data="edit_interval")
                )
                await message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ #{num}: {rss_feeds[index]['name']}\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:",
                                     reply_markup=keyboard)
            else:
                await message.answer(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(rss_feeds)}")
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")

# Callback handler –¥–ª—è –∫–Ω–æ–ø–æ–∫
async def edit_rss_callback_handler(callback: types.CallbackQuery, rss_feeds, user_states):
    chat_id = callback.from_user.id
    if chat_id not in user_states or user_states[chat_id].get("mode") != "edit":
        await callback.answer("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ RSS —á–µ—Ä–µ–∑ /edit_rss")
        return

    state = user_states[chat_id]
    index = state["index"]

    if callback.data in ["edit_url", "edit_name", "edit_interval"]:
        state["field"] = callback.data.split("_")[1]
        state["step"] = 2
        await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {rss_feeds[index]['name']}:")
        await callback.answer()

# –®–∞–≥ 2 ‚Äî –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
async def edit_rss_apply_handler(message: types.Message, rss_feeds, user_states):
    chat_id = message.chat.id
    if chat_id not in user_states or user_states[chat_id].get("mode") != "edit":
        return

    state = user_states[chat_id]
    index = state["index"]
    field = state.get("field")
    text = message.text.strip()

    if field == "interval":
        try:
            interval = int(text)
            rss_feeds[index]["interval"] = interval * 60
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.")
            return
    else:
        rss_feeds[index][field] = text

    await message.answer(f"‚úÖ RSS –æ–±–Ω–æ–≤–ª—ë–Ω: {rss_feeds[index]['name']}")
    del user_states[chat_id]
