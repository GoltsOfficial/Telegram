# bot/handlers.py
from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.db.database import (
    add_feed, get_all_feeds, update_feed, delete_feed,
    add_ad, get_all_ads, update_ad, decrement_ad_view
)
from bot.states import user_states

# ====================== –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ======================
async def handle_message(message: types.Message):
    chat_id = message.chat.id
    text = message.text.strip()

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
    if chat_id in user_states:
        state = user_states[chat_id]

        # ===== RSS =====
        if state["mode"] == "add_rss":
            await handle_add_rss(message, state)
            return
        elif state["mode"] == "edit_rss":
            await handle_edit_rss(message, state)
            return
        elif state["mode"] == "remove_rss":
            await handle_remove_rss(message, state)
            return

        # ===== Ads =====
        elif state["mode"] == "add_ad":
            await handle_add_ad(message, state)
            return
        elif state["mode"] == "edit_ad":
            await handle_edit_ad(message, state)
            return
        elif state["mode"] == "remove_ad":
            await handle_remove_ad(message, state)
            return

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    if text == "/start":
        await message.answer(
            "ü§ñ –ú–µ–Ω—é –±–æ—Ç–∞\n\n"
            "RSS:\n"
            "/add_rss ‚Äî –¥–æ–±–∞–≤–∏—Ç—å RSS\n"
            "/edit_rss ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å RSS\n"
            "/remove_rss ‚Äî —É–¥–∞–ª–∏—Ç—å RSS\n"
            "/list_rss ‚Äî —Å–ø–∏—Å–æ–∫ RSS\n\n"
            "–†–µ–∫–ª–∞–º–∞:\n"
            "/add_ad ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º—É\n"
            "/edit_ad ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–ª–∞–º—É\n"
            "/remove_ad ‚Äî —É–¥–∞–ª–∏—Ç—å —Ä–µ–∫–ª–∞–º—É\n"
            "/list_ads ‚Äî —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º—ã"
        )
    elif text == "/add_rss":
        user_states[chat_id] = {"mode": "add_rss", "step": 1}
        await message.answer("üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É RSS:")
    elif text == "/list_rss":
        feeds = get_all_feeds()
        if not feeds:
            await message.answer("üì≠ –°–ø–∏—Å–æ–∫ RSS –ø—É—Å—Ç.")
            return
        msg = "üìÉ –¢–µ–∫—É—â–∏–µ RSS-–ª–µ–Ω—Ç—ã:\n" + "\n".join(
            f"ID: {f['id']} | {f['name']} | –ò–Ω—Ç–µ—Ä–≤–∞–ª: {f['interval']} –º–∏–Ω" for f in feeds
        )
        await message.answer(msg)
    elif text == "/edit_rss":
        feeds = get_all_feeds()
        if not feeds:
            await message.answer("üì≠ –°–ø–∏—Å–æ–∫ RSS –ø—É—Å—Ç.")
            return
        user_states[chat_id] = {"mode": "edit_rss", "step": 1}
        msg = "üìÉ –í–≤–µ–¥–∏—Ç–µ ID RSS –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n" + "\n".join(
            f"{f['id']} - {f['name']}" for f in feeds
        )
        await message.answer(msg)
    elif text == "/remove_rss":
        feeds = get_all_feeds()
        if not feeds:
            await message.answer("üì≠ –°–ø–∏—Å–æ–∫ RSS –ø—É—Å—Ç.")
            return
        user_states[chat_id] = {"mode": "remove_rss", "step": 1}
        msg = "üóë –í–≤–µ–¥–∏—Ç–µ ID RSS –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n" + "\n".join(
            f"{f['id']} - {f['name']}" for f in feeds
        )
        await message.answer(msg)
    elif text == "/add_ad":
        user_states[chat_id] = {"mode": "add_ad", "step": 1}
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º—ã:")
    elif text == "/edit_ad":
        ads = get_all_ads()
        if not ads:
            await message.answer("üì≠ –†–µ–∫–ª–∞–º –ø—É—Å—Ç.")
            return
        user_states[chat_id] = {"mode": "edit_ad", "step": 1}
        msg = "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ–∫–ª–∞–º—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:\n" + "\n".join(
            f"{a['id']} - {a['text']} (–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–æ–≤: {a['views']})" for a in ads
        )
        await message.answer(msg)
    elif text == "/remove_ad":
        ads = get_all_ads()
        if not ads:
            await message.answer("üì≠ –†–µ–∫–ª–∞–º –ø—É—Å—Ç.")
            return
        user_states[chat_id] = {"mode": "remove_ad", "step": 1}
        msg = "–í–≤–µ–¥–∏—Ç–µ ID —Ä–µ–∫–ª–∞–º—ã –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è/—É–º–µ–Ω—å—à–µ–Ω–∏—è –ø–æ–∫–∞–∑–æ–≤:\n" + "\n".join(
            f"{a['id']} - {a['text']} (–û—Å—Ç–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–æ–≤: {a['views']})" for a in ads
        )
        await message.answer(msg)
    elif text == "/list_ads":
        ads = get_all_ads()
        if not ads:
            await message.answer("üì≠ –†–µ–∫–ª–∞–º –ø—É—Å—Ç.")
            return
        msg = "üì¢ –°–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º—ã:\n" + "\n".join(
            f"ID: {a['id']} | {a['text']} | –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–∫–∞–∑–æ–≤: {a['views']}" for a in ads
        )
        await message.answer(msg)
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")


# ====================== RSS ======================
async def handle_add_rss(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 1:
        state["url"] = text
        state["step"] = 2
        await message.answer("üìù –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ RSS:")
    elif state["step"] == 2:
        state["name"] = text
        state["step"] = 3
        await message.answer("‚è± –í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∞—Ö:")
    elif state["step"] == 3:
        try:
            interval = int(text)
            add_feed(state["name"], state["url"], interval)
            await message.answer("‚úÖ RSS –¥–æ–±–∞–≤–ª–µ–Ω!")
            del user_states[message.chat.id]
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")


async def handle_edit_rss(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 1:
        try:
            feed_id = int(text)
            feed = next((f for f in get_all_feeds() if f['id'] == feed_id), None)
            if not feed:
                await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.")
                return
            state["feed_id"] = feed_id
            state["step"] = 2
            keyboard = InlineKeyboardMarkup(row_width=3)
            keyboard.add(
                InlineKeyboardButton("‚úèÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data="edit_name"),
                InlineKeyboardButton("üîó –°—Å—ã–ª–∫–∞", callback_data="edit_url"),
                InlineKeyboardButton("‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª", callback_data="edit_interval")
            )
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:", reply_markup=keyboard)
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ ID.")
    elif state["step"] == 3:
        field = state.get("editing_field")
        value = int(text) if field == "interval" else text
        update_feed(state["feed_id"], field, value)
        await message.answer(f"‚úÖ {field} –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
        del user_states[message.chat.id]


async def handle_remove_rss(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 1:
        try:
            feed_id = int(text)
            delete_feed(feed_id)
            await message.answer("‚úÖ RSS —É–¥–∞–ª–µ–Ω!")
            del user_states[message.chat.id]
        except:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.")


# ====================== Ads ======================
async def handle_add_ad(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 1:
        state["text"] = text
        state["step"] = 2
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫–∞–∑–æ–≤:")
    elif state["step"] == 2:
        try:
            views = int(text)
            add_ad(state["text"], views)
            await message.answer(f"‚úÖ –†–µ–∫–ª–∞–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞! –ü–æ–∫–∞–∑–æ–≤: {views}")
            del user_states[message.chat.id]
        except:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.")


async def handle_edit_ad(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 2:
        try:
            ad_id = state["ad_id"]
            update_ad(ad_id, text)
            await message.answer("‚úÖ –¢–µ–∫—Å—Ç —Ä–µ–∫–ª–∞–º—ã –æ–±–Ω–æ–≤–ª–µ–Ω!")
            del user_states[message.chat.id]
        except:
            await message.answer("‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è.")


async def handle_remove_ad(message: types.Message, state):
    text = message.text.strip()
    if state["step"] == 1:
        try:
            ad_id = int(text)
            decrement_ad_view(ad_id)
            await message.answer("‚úÖ –†–µ–∫–ª–∞–º–∞ —É–¥–∞–ª–µ–Ω–∞/—É–º–µ–Ω—å—à–µ–Ω–∞ –ø–æ–∫–∞–∑–æ–≤!")
            del user_states[message.chat.id]
        except:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID.")
